/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clicgame;
import static clicgame.Settings.Amount;
import static clicgame.Settings.Delay;
import static clicgame.Settings.Time;
import static clicgame.Settings.Puntaje;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static clicgame.Inicio.txt_userid;
import static clicgame.Settings.txt_amount;

/**
 *
 * @author Demon
 */
public class Game extends javax.swing.JFrame {
    public static Boolean start=true, delay = false, dstart = false;
    public static JLabel lbl_pointer = new JLabel();
    Pointer ptr = new Pointer();
    Login lgn = new Login();
    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        lbl_amount = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        lbl_delay = new javax.swing.JLabel();
        lbl_puntaje = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(700, 400));
        setMinimumSize(new java.awt.Dimension(700, 400));
        setPreferredSize(new java.awt.Dimension(700, 400));
        setResizable(false);
        setSize(new java.awt.Dimension(700, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbl_amount.setText("Amount");

        lbl_time.setText("Time");

        lbl_delay.setText("Delay");
        lbl_delay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_delayMousePressed(evt);
            }
        });

        lbl_puntaje.setText("Puntaje: 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lbl_amount)
                .addGap(225, 225, 225)
                .addComponent(lbl_time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 227, Short.MAX_VALUE)
                .addComponent(lbl_delay)
                .addGap(125, 125, 125))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_puntaje)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_amount)
                    .addComponent(lbl_time)
                    .addComponent(lbl_delay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 305, Short.MAX_VALUE)
                .addComponent(lbl_puntaje)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    

    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //debug
        //Time = 0;
        //Point();
        add(ptr.puntero(lbl_pointer));
        ptr.setFrame(lbl_amount,lbl_time,lbl_delay,lbl_puntaje);
        //ptr.puntero(ptr.lbl_pointer);
        new Timer().schedule( 
        new TimerTask() {
            @Override
            public void run() {
                // your code here
                while(start){
                    System.out.println("delay noclic " + start);
                    while (delay){
                        System.out.println("delay clic " + delay);
                        try {
                        Thread.sleep(ptr.convertTime(Delay));
                        } catch (InterruptedException ex) {
                            System.out.println(ex);
                        }
                        dstart = false;
                        delay = false;
                    }
                    while (dstart){
                        System.out.println("delay noclic passed " + dstart);
                        ptr.cleanPoint(lbl_pointer);
                        ptr.setFrame(lbl_amount, lbl_time, lbl_delay, lbl_puntaje);
                        try {
                        Thread.sleep(ptr.convertTime(Delay));
                        } catch (InterruptedException ex) {
                            System.out.println(ex);
                        }
                        dstart = false;
                    }
                        ptr.updateLabel(lbl_amount, lbl_puntaje);
                        ptr.updateLocation(lbl_pointer);
                        dstart = true;
                    try {
                        Thread.sleep(ptr.convertTime(Time));
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                    if (Amount <= 0) {
                        start = false;
                        ptr.updateLabel(lbl_amount, lbl_puntaje);
                        ptr.cleanPoint(lbl_pointer);
                        int seleccion = JOptionPane.showOptionDialog( null,"¿Desea guardar su puntaje?",
                        "Selector de opciones",JOptionPane.YES_NO_CANCEL_OPTION,
                        JOptionPane.QUESTION_MESSAGE,null,// null para icono por defecto.
                        new Object[] { "Si", "No", "Salir"},"Si");
                        System.out.println(seleccion);
                        if (seleccion == 0) {
                            //comentado para que ingrese de manera libre
                            //lgn.savegame(Puntaje, txt_userid.getText());
                        } else if (seleccion == 1) {
                            int selection = JOptionPane.showOptionDialog( null,"¿Desea jugar otra vez?",
                            "Selector de opciones",JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,null,// null para icono por defecto.
                            new Object[] { "Si", "No"},"Si");
                            if (selection == 0) {
                                update();
                                ptr.setFrame(lbl_amount, lbl_time, lbl_delay, lbl_puntaje);
                                start = true;
                            } else if (selection == 1 || selection == -1) {
                                System.exit(0);
                            }
                        }
                        else if (seleccion == 2 || seleccion == -1) {
                            System.exit(0);
                        }
                    }
                }
            }
        }, 
        0 );
    }//GEN-LAST:event_formWindowOpened
    
    public void update(){
        Amount = Integer.parseInt(txt_amount.getText());
        Puntaje = 0;
    }
    private void lbl_delayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_delayMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_delayMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        new Game().setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame jFrame1;
    public static javax.swing.JLabel lbl_amount;
    public static javax.swing.JLabel lbl_delay;
    public static javax.swing.JLabel lbl_puntaje;
    public static javax.swing.JLabel lbl_time;
    // End of variables declaration//GEN-END:variables
}
